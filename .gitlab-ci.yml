default:
  image: "archlinux:latest"

stages:
  - lint
  - build
  - publish

shellcheck:
  stage: lint
  before_script:
    - pacman -Syu --needed --noconfirm shellcheck
  script:
    - shellcheck **/*.sh

shfmt:
  stage: lint
  before_script:
    - pacman -Syu --needed --noconfirm shfmt
  script:
    - shfmt -i 2 -ci -d **/*.sh

.build:
  stage: build
  before_script:
    - pacman -Syu --needed --noconfirm qemu-headless libisoburn
  script:
    - echo "BUILD_DATE=$(date -I)" > build.env
    - . build.env
    - ./build-in-qemu.sh
    - mv build.env output/
  after_script:
    - echo "image_size_megabytes{image=\"qcow2\"} $(du -m output/*cloudimg*qcow2)" > metrics.txt
    - echo "image_size_megabytes{image=\"libvirt\"} $(du -m output/*libvirt*box)" >> metrics.txt
    - echo "image_size_megabytes{image=\"virtualbox\"} $(du -m output/*virtualbox*box)" >> metrics.txt
  artifacts:
    reports:
      metrics: metrics.txt

build:
  extends: .build
  except:
    - master

build:release:
  extends: .build
  tags:
    - secure
  only:
    - master
  artifacts:
    name: "output"
    paths:
      - "output/*"
    expire_in: 2d

publish:
  stage: publish
  tags:
    - secure
  before_script:
    - pacman -Syu --needed --noconfirm vagrant
  script:
    - . output/build.env
    - vagrant cloud auth login --token "${VAGRANT_API_TOKEN}"
    - vagrant cloud auth login --check
    - vagrant cloud box show archlinux/archlinux
    - vagrant cloud publish archlinux/archlinux "v${BUILD_DATE}" libvirt output/Arch-Linux-x86_64-libvirt-*.box --release -f
    - vagrant cloud publish archlinux/archlinux "v${BUILD_DATE}" virtualbox output/Arch-Linux-x86_64-virtualbox-*.box --release -f
  only:
    variables:
      - $SCHEDULED_PUBLISH == "TRUE"
  resource_group: vm-build
